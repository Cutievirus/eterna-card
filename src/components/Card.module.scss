
$card-z: calc(sin(var(--card-flip,0deg))*var(--card-width,0px)/2 + 1px + var(--card-z,0px));



.card{
    
  --card-width: 63mm;
  --card-height: 88mm;
  --card-x: 0;
  --card-y: 0;
  --card-z: 0px;
  --card-flip: 0deg;
  --card-rot: 0deg;
  
  background: lightgray;
  margin: 1em;
  padding: 1em;
  border-radius: 10px;
  position: relative;
  width: var(--card-width);
  height: var(--card-height);
  
  transform: translateZ($card-z) rotateY(var(--card-flip,0deg));
  transform-style: preserve-3d;
  
  backface-visibility: hidden;
  
  /*
  box-shadow: 
    calc(-1*sin(var(--field-rot-z))*var(--card-height,1em))
    calc(cos(var(--field-rot-z))*var(--card-height,1em))
    var(--card-height,1em) rgba(0,0,0,.2);
  */
  /* box-shadow: 0 0 1em gold; */
  animation: 3s card-flip infinite alternate; 
  --transition-time: 1s;
  // transition: transform var(--transition-time);
  
  /* antialiasing */
  outline: 1px solid transparent;
}

.card:hover{
  --card-flip: 180deg;
}

.card:before{/* card shadow */
  content: ' ';
  position: absolute;
  display: block;
  left: 0; top: 0;
  width: 100%; height: 100%;
  
  /* these are needed for some reason lol idk why */
  /*
  --card-height: inherit;
  --card-flip: inherit;
  */
  
  border-radius: inherit;
  
  transform:
    rotateY(calc(-1*var(--card-flip,0deg))) translateZ(calc(-1*#{$card-z}))
    scaleX(cos(var(--card-flip,0deg)));
  
  background-color: rgba(0,0,0,.2);
  filter: blur(calc(#{$card-z}/10));
}

.card:after{/* card back */
  content: ' ';
  position: absolute;
  display: block;
  left: 0; top: 0;
  width: 100%; height: 100%;
  
  background-color: darkgray;
  transform: rotateX(180deg);
  
  border-radius: inherit;
  backface-visibility: hidden;
}

@property --card-flip {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --card-height {
  syntax: "<length>";
  inherits: true;
  initial-value: 0;
}

@keyframes card-flip {
  0% {
    --card-flip: 0deg;
  }
  100% {
    --card-flip: 180deg;
  }
}

.card .portrait{
  width: 200px;
  height: 200px;
  background-color: blue;
  position: relative;
  transform-style: preserve-3d;
  overflow: hidden;
}

.card .portrait:after {
  content: ' ';
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  position: absolute;
  transform:
    /*card transforms*/
    rotateY(calc(1*var(--card-flip,0deg)))
    /*inverted field transforms*/
    rotateZ(calc(-1*var(--field-rot-z))) rotateX(var(--field-rot-x))
    /*parallax depth*/
    translateZ(-100px)
    /*field transforms*/
    rotateX(calc(-1*var(--field-rot-x))) rotateZ(calc(1*var(--field-rot-z)))
    /*inverted card transforms*/
    rotateY(calc(-1*var(--card-flip,0deg)))
    /*extras*/
    rotateY(0deg);
  transform:
    rotateY(calc(1*var(--card-flip,0deg)))
    rotateZ(calc(-1*var(--field-rot-z))) rotateX(calc(1*var(--field-rot-x)))
    rotateZ(calc(1*var(--field-rot-z)))
    translateZ(-100px)
    rotateY(calc(-1*var(--card-flip,0deg)));
  background-color: white;
  border-radius: 50%;
  
}